version: "3"
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
#      - "443:443"
    depends_on:
      - web
      - db
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./.nginx/default_location:/etc/nginx/vhost.d/default_location
      - static:/var/www/html/static:ro
    restart: unless-stopped
#  letsencrypt-proxy:
#    image: jrcs/letsencrypt-nginx-proxy-companion
#    container_name: letsencrypt-proxy
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - letsencrypt-certs:/etc/nginx/certs
#      - letsencrypt-vhost-d:/etc/nginx/vhost.d
#      - letsencrypt-html:/usr/share/nginx/html
#    environment:
#      - DEFAULT_EMAIL=${DJANGO_SUPERUSER_EMAIL}
#      - NGINX_PROXY_CONTAINER=nginx-proxy
#    recstart: unless-stopped
  db:
    image: postgres:latest
    container_name: masto-mail-blocker_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=mastomailblocker
    healthcheck:
      test: "pg_isready --username=postgres && psql --username=postgres --list"
      timeout: 10s
      retries: 20
  web:
    build: .
    container_name: masto-mail-blocker
    environment:
      - VIRTUAL_HOST=${HOST}
      - VIRTUAL_PROTO=uwsgi
#      - LETSENCRYPT_HOST=${HOST}
#      - LETSENCRYPT_EMAIL=p${DJANGO_SUPERUSER_EMAIL}
    env_file:
      - .env
    volumes:
      - uwsgi_data:/tmp/uwsgi/
      - static:/code/staticfiles
      - ./backup:/code/backup
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
        python manage.py createsuperuser --noinput &&
        python manage.py createcachetable &&
        python manage.py import_domains &&
        python manage.py loaddata app/fixtures/db.json
        python manage.py collectstatic --noinput &&
        python manage.py generate_schedules &&
        supervisord -c supervisord.conf &&
        uwsgi --ini /code/uwsgi.docker.ini"

volumes:
  static:
  uwsgi_data:
  postgres_data: