# Generated by Django 4.2.24 on 2025-10-03 13:36

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0009_rename_client_id_client_client_key'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='client',
            options={'ordering': ('-created_at',), 'verbose_name': 'Mastodon Client', 'verbose_name_plural': 'Mastodon Clients'},
        ),
        migrations.AlterModelOptions(
            name='domain',
            options={'ordering': ('name',), 'verbose_name': 'Blocked Domain', 'verbose_name_plural': 'Blocked Domains'},
        ),
        migrations.AlterModelOptions(
            name='faq',
            options={'ordering': ('order', 'title'), 'verbose_name': 'FAQ', 'verbose_name_plural': 'FAQs'},
        ),
        migrations.AddField(
            model_name='client',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this client is actively syncing', verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='client',
            name='last_verified',
            field=models.DateTimeField(blank=True, help_text='Last successful credential verification', null=True, verbose_name='Last Verified'),
        ),
        migrations.AddField(
            model_name='client',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated'),
        ),
        migrations.AddField(
            model_name='domain',
            name='is_active',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this domain should be blocked', verbose_name='Active'),
        ),
        migrations.AddField(
            model_name='domain',
            name='source',
            field=models.CharField(default='disposable-email-domains', help_text='Source of this domain entry', max_length=50, verbose_name='Source'),
        ),
        migrations.AddField(
            model_name='domain',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated'),
        ),
        migrations.AddField(
            model_name='faq',
            name='order',
            field=models.PositiveIntegerField(default=0, help_text='Sort order (lower numbers appear first)', verbose_name='Display Order'),
        ),
        migrations.AddField(
            model_name='faq',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated'),
        ),
        migrations.AlterField(
            model_name='client',
            name='access_token',
            field=models.CharField(blank=True, default='', help_text='OAuth access token - obtained after authorization', max_length=500, verbose_name='Access Token'),
        ),
        migrations.AlterField(
            model_name='client',
            name='client_key',
            field=models.CharField(blank=True, default='', help_text='OAuth client ID from Mastodon instance', max_length=255, unique=True, verbose_name='Client Key'),
        ),
        migrations.AlterField(
            model_name='client',
            name='client_secret',
            field=models.CharField(blank=True, default='', help_text='OAuth client secret (should be encrypted in production)', max_length=255, verbose_name='Client Secret'),
        ),
        migrations.AlterField(
            model_name='client',
            name='client_url',
            field=models.URLField(db_index=True, help_text='Base URL of the Mastodon instance', max_length=255, unique=True, verbose_name='Instance URL'),
        ),
        migrations.AlterField(
            model_name='client',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='domain',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='domain',
            name='name',
            field=models.CharField(db_index=True, help_text='Disposable email domain to block', max_length=253, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_domain', message='Enter a valid domain name', regex='^(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$')], verbose_name='Domain Name'),
        ),
        migrations.AlterField(
            model_name='faq',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created'),
        ),
        migrations.AlterField(
            model_name='faq',
            name='published',
            field=models.BooleanField(db_index=True, default=True, help_text='Whether this FAQ is visible to users', verbose_name='Published'),
        ),
        migrations.AlterField(
            model_name='faq',
            name='text',
            field=models.TextField(help_text='Answer content (supports HTML)', verbose_name='Answer'),
        ),
        migrations.AlterField(
            model_name='faq',
            name='title',
            field=models.CharField(help_text='Question or FAQ title', max_length=200, unique=True, verbose_name='Title'),
        ),
        migrations.AddIndex(
            model_name='client',
            index=models.Index(fields=['is_active', '-created_at'], name='app_client_is_acti_bcaace_idx'),
        ),
        migrations.AddIndex(
            model_name='domain',
            index=models.Index(fields=['is_active', 'name'], name='app_domain_is_acti_de09b2_idx'),
        ),
        migrations.AddIndex(
            model_name='faq',
            index=models.Index(fields=['published', 'order'], name='app_faq_publish_ea830a_idx'),
        ),
    ]
